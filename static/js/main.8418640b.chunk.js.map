{"version":3,"sources":["assets/utils/types/index.ts","assets/context/languages/index.tsx","i18n.ts","assets/context/global/index.tsx","assets/context/history/index.tsx","routers/index.tsx","App.tsx","index.tsx"],"names":["ColorTypes","LanguageTypes","TextTypes","screenObj","xs","sm","md","lg","xl","xxl","initialvalues","lang","portuguese","setLang","Function","setUpdate","LanguagesContext","createContext","LanguagesProvider","children","useState","Provider","value","language","i18next","changeLanguage","useLanguagesContext","context","useContext","t","key","options","init","interpolation","escapeValue","lng","resources","pt","home","homePt","common","commonPt","en","homeEn","commonEn","initialValues","token","setToken","email","setEmail","userId","setUserId","setReset","GlobalContext","GlobalProvider","previous","setPrevious","current","setCurrent","setPath","HistoryContext","HistoryProvider","path","setTimeout","useHistoryContext","HomeModule","lazy","PublicRoute","component","rest","render","props","history","location","pathname","React","createElement","to","RootRouter","fallback","basename","App","setConfiguration","gridColumns","gutterWidth","breakpoints","containerWidths","maxScreenClass","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8418640b.chunk.js","sourcesContent":["export enum ColorTypes {\r\n  mainText = \"#333333\",\r\n  gray1 = \"#707070\",\r\n  gray2 = \"#707070\",\r\n  gray3 = \"#e0e0e0\",\r\n  gray4 = \"#f8f8f8\",\r\n  gray5 = \"#5b5b5b\",\r\n  borderGray = \"#e0e0e0\",\r\n  modalOverlay = \"#00000077\",\r\n  activeMenu = \"#ffffff1a\",\r\n  nextPageDisable = \"#21295e4d\",\r\n  gold1 = \"#b39e63\",\r\n  gold2 = \"#c4ad6c\",\r\n  gold3 = \"#cebb86\",\r\n  gold_ADA = \"#877237\",\r\n  gold_MENU = \"#e4b71f\",\r\n  blue1 = \"#161b33\",\r\n  blue2 = \"#1e2446\",\r\n  blue3 = \"#21295e\",\r\n  blueActivated = \"#3979b6\",\r\n  expanded1 = \"#06417b\",\r\n  expanded2 = \"#185fa4\",\r\n  expanded3 = \"#3979b6\",\r\n  darker1 = \"#a40060\",\r\n  darker2 = \"#602166\",\r\n  darker3 = \"#0b7fa2\",\r\n  darker4 = \"#00833b\",\r\n  darker5 = \"#5b7b09\",\r\n  darker6 = \"#e9b700\",\r\n  darker7 = \"#c75300\",\r\n  darker8 = \"#b50000\",\r\n  lighter1 = \"#c44591\",\r\n  lighter2 = \"#99609f\",\r\n  lighter3 = \"#3b9dba\",\r\n  lighter4 = \"#47a371\",\r\n  lighter5 = \"#76a10d\",\r\n  lighter6 = \"#f2ce49\",\r\n  lighter7 = \"#e07829\",\r\n  lighter8 = \"#c94040\",\r\n  lighter_blue = \"#5ea0de\",\r\n  lightBlue = \"#f0f2ff\",\r\n  lightGreen = \"#defffb\",\r\n  lightGold = \"#fffaed\",\r\n  primaryLight = \"#4d5baa\",\r\n  white = \"#fff\",\r\n  black = \"#000\",\r\n  secondaryLighter5 = \"#76a10d\",\r\n  cleanGold = \"#fbf7eb\",\r\n  cleanBlue = \"#333e7c\",\r\n  primaryGold = gold2,\r\n  primaryBlue = blue3,\r\n  secondaryGray = gray1,\r\n  error = darker8,\r\n  errorLighter = lighter8,\r\n  warning = darker7,\r\n  warningLighter = lighter7,\r\n  info = darker3,\r\n  infoLighter = lighter3,\r\n  success = darker4,\r\n  successLighter = lighter4,\r\n}\r\n\r\nexport enum LanguageTypes {\r\n  portuguese = \"pt\",\r\n  english = \"en\",\r\n}\r\n\r\nexport enum TextTypes {\r\n  h1 = \"h1\",\r\n  h2 = \"h2\",\r\n  h3 = \"h3\",\r\n  h4 = \"h4\",\r\n  h5 = \"h5\",\r\n  h6 = \"h6\",\r\n  p = \"p\",\r\n  label = \"label\",\r\n}\r\nexport type TextType = \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\" | \"label\";\r\n\r\nexport const screenObj = {\r\n  xs: \"xs\",\r\n  sm: \"sm\",\r\n  md: \"md\",\r\n  lg: \"lg\",\r\n  xl: \"xl\",\r\n  xxl: \"xxl\",\r\n};\r\n","import React, { createContext, FC, useContext, useState } from \"react\";\r\n\r\nimport i18next from \"../../../i18n\";\r\nimport { LanguageTypes } from \"../../utils/types\";\r\n\r\ninterface LanguagesProps {\r\n  lang: string;\r\n  setLang?: any;\r\n  setUpdate: any;\r\n}\r\n\r\nconst initialvalues: LanguagesProps = {\r\n  lang: LanguageTypes.portuguese,\r\n  setLang: Function as any,\r\n  setUpdate: Function as any,\r\n};\r\n\r\nconst LanguagesContext = createContext({\r\n  ...initialvalues,\r\n});\r\n\r\nexport const LanguagesProvider: FC = ({ children }) => {\r\n  const [lang, setLang] = useState(initialvalues.lang);\r\n\r\n  const setUpdate = (language: string) => {\r\n    i18next.changeLanguage(language);\r\n    setLang(language);\r\n  };\r\n\r\n  return (\r\n    <LanguagesContext.Provider\r\n      value={{\r\n        lang,\r\n        setUpdate,\r\n      }}>\r\n      {children}\r\n    </LanguagesContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * @alias useLanguagesContext\r\n * @param {}\r\n * @description method used to set language context\r\n */\r\nexport const useLanguagesContext = () => {\r\n  const context = useContext(LanguagesContext);\r\n  const { lang, setUpdate } = context;\r\n  return {\r\n    lang,\r\n    setUpdate,\r\n  };\r\n};\r\n","import i18next from \"i18next\";\r\nimport { LanguageTypes } from \"./assets/utils/types\";\r\n\r\nimport {\r\n  // imports\r\n  homePt,\r\n  homeEn,\r\n  commonPt,\r\n  commonEn,\r\n} from \"./translations/translation\";\r\n\r\ni18next.init({\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n  lng: LanguageTypes.portuguese,\r\n  resources: {\r\n    pt: {\r\n      // exports pt\r\n      home: homePt,\r\n      common: commonPt,\r\n    },\r\n    en: {\r\n      // exports en\r\n      home: homeEn,\r\n      common: commonEn,\r\n    },\r\n  },\r\n});\r\n\r\nfunction t(key: string, options?: any) {\r\n  if (!!options) {\r\n    return i18next.t(key, options);\r\n  }\r\n  return i18next.t(key);\r\n}\r\n\r\nexport { t };\r\n\r\nexport default i18next;\r\n","import React, { createContext, FC, useContext, useState } from \"react\";\r\n\r\ninterface GlobalProps {\r\n  token: string;\r\n  setToken: any;\r\n  email?: string;\r\n  setEmail?: any;\r\n  userId?: string;\r\n  setUserId?: any;\r\n  setReset?: any;\r\n}\r\n\r\nconst initialValues: GlobalProps = {\r\n  token: \"\",\r\n  setToken: Function as any,\r\n  email: \"\",\r\n  setEmail: Function as any,\r\n  userId: \"\",\r\n  setUserId: Function as any,\r\n  setReset: Function as any,\r\n};\r\n\r\nconst GlobalContext = createContext({\r\n  ...initialValues,\r\n});\r\n\r\nexport const GlobalProvider: FC = ({ children }) => {\r\n  const [token, setToken] = useState(initialValues.token);\r\n  const [email, setEmail] = useState(initialValues.email);\r\n  const [userId, setUserId] = useState(initialValues.userId);\r\n\r\n  const setReset = () => {\r\n    setToken(initialValues.token);\r\n    setEmail(initialValues.email);\r\n    setUserId(initialValues.userId);\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        token,\r\n        setToken,\r\n        email,\r\n        setEmail,\r\n        userId,\r\n        setUserId,\r\n        setReset,\r\n      }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * @alias useGlobalContext\r\n * @param {}\r\n * @description method used to set global context\r\n */\r\nexport const useGlobalContext = () => {\r\n  const context = useContext(GlobalContext);\r\n  const {\r\n    token,\r\n    setToken,\r\n    email,\r\n    setEmail,\r\n    userId,\r\n    setUserId,\r\n    setReset,\r\n  } = context;\r\n  return {\r\n    token,\r\n    setToken,\r\n    email,\r\n    setEmail,\r\n    userId,\r\n    setUserId,\r\n    setReset,\r\n  };\r\n};\r\n","import React, { createContext, FC, useContext, useState } from \"react\";\r\n\r\ninterface HistoryProps {\r\n  previous?: string;\r\n  setPrevious?: any;\r\n  current?: string;\r\n  setCurrent?: any;\r\n  setPath?: any;\r\n}\r\n\r\nconst initialValues: HistoryProps = {\r\n  previous: \"/\",\r\n  setPrevious: Function as any,\r\n  current: \"/\",\r\n  setCurrent: Function as any,\r\n  setPath: Function as any,\r\n};\r\n\r\nconst HistoryContext = createContext(initialValues);\r\n\r\nexport const HistoryProvider: FC = ({ children }) => {\r\n  const [previous, setPrevious] = useState(initialValues.previous);\r\n  const [current, setCurrent] = useState(initialValues.current);\r\n\r\n  const setPath = (path: string) => {\r\n    setTimeout(() => {\r\n      if (path !== current) {\r\n        setPrevious(current);\r\n      }\r\n      setCurrent(path);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <HistoryContext.Provider\r\n      value={{\r\n        previous,\r\n        setPrevious,\r\n        current,\r\n        setCurrent,\r\n        setPath,\r\n      }}>\r\n      {children}\r\n    </HistoryContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * @alias useHistoryContext\r\n * @param {}\r\n * @description method used to set history context\r\n */\r\nexport const useHistoryContext = () => {\r\n  const context = useContext(HistoryContext);\r\n  const { previous, setPrevious, current, setCurrent, setPath } = context;\r\n  return {\r\n    previous,\r\n    setPrevious,\r\n    current,\r\n    setCurrent,\r\n    setPath,\r\n  };\r\n};\r\n","import React, { FC, lazy, Suspense } from \"react\";\r\nimport { BrowserRouter, Redirect, Route, RouteProps } from \"react-router-dom\";\r\nimport { ScreenClassProvider } from \"react-grid-system\";\r\n\r\nimport { GlobalProvider, useGlobalContext } from \"../assets/context/global\";\r\nimport { HistoryProvider, useHistoryContext } from \"../assets/context/history\";\r\nimport { LanguagesProvider } from \"../assets/context/languages\";\r\n\r\n// Imports\r\nconst HomeModule = lazy(() => import(\"./home\"));\r\n\r\nexport const PublicRoute: FC<RouteProps | any> = ({ component, ...rest }) => {\r\n  const { setPath } = useHistoryContext();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const path = props.history.location.pathname;\r\n\r\n        if (component) {\r\n          setPath(path);\r\n          return React.createElement(component, props);\r\n        }\r\n\r\n        return <Redirect to=\"/\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PrivateRoute: FC<RouteProps | any> = ({ component, ...rest }) => {\r\n  const { token } = useGlobalContext();\r\n  const { setPath } = useHistoryContext();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const path = props.history.location.pathname;\r\n\r\n        if (token && component) {\r\n          setPath(path);\r\n          return React.createElement(component, props);\r\n        }\r\n\r\n        return <Redirect to=\"/\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst RootRouter = () => (\r\n  <Suspense fallback={<div>loading...</div>}>\r\n    <BrowserRouter basename=\"/web-courses\">\r\n      <GlobalProvider>\r\n        <HistoryProvider>\r\n          <LanguagesProvider>\r\n            <ScreenClassProvider>\r\n              <PublicRoute path=\"/\" component={HomeModule} />\r\n            </ScreenClassProvider>\r\n          </LanguagesProvider>\r\n        </HistoryProvider>\r\n      </GlobalProvider>\r\n    </BrowserRouter>\r\n  </Suspense>\r\n);\r\n\r\nexport default RootRouter;\r\n","import React from \"react\";\nimport RootRouter from \"./routers\";\n\nfunction App() {\n  return <RootRouter />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { setConfiguration } from \"react-grid-system\";\nimport \"./styles/reset.scss\";\nimport \"./styles/_fonts.scss\";\nimport \"./assets/fonts/IconsCourses.css\";\nimport \"./styles/global.scss\";\nimport App from \"./App\";\n\n// sm, md, lg, xl, xxl\nsetConfiguration({\n  gridColumns: 12,\n  gutterWidth: 30,\n  breakpoints: [576, 768, 992, 1200, 1600], // sm md lg xl xxl\n  containerWidths: [540, 740, 960, 1140, 1540],\n  maxScreenClass: \"xl\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}